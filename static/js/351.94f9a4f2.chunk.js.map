{"version":3,"file":"static/js/351.94f9a4f2.chunk.js","mappings":"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","sources":["Pages/Cart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { formatPrice } from \"../Components/Ultils/formatPrice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { adjustQuantity, removeFromCart } from \"../redux/cartSlice.js\";\r\nimport { showNotification } from \"../redux/notificationSlice.js\";\r\nimport { getProduct } from \"../api/productApi.jsx\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Cart = () => {\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [itemToRemove, setItemToRemove] = useState(null);\r\n\r\n  const cartItems = useSelector((state) => state.cart.items);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"cart\", JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n  const subtotal = cartItems.reduce(\r\n    (acc, item) => acc + item.price * item.quantity,\r\n    0\r\n  );\r\n  const total = subtotal;\r\n  const handleRemove = (id, size) => {\r\n    const item = { _id: id, size: size };\r\n    setIsOpen(true);\r\n    setItemToRemove(item);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n    setItemToRemove(null);\r\n  };\r\n  const confirmRemoval = () => {\r\n    if (itemToRemove) {\r\n      dispatch(removeFromCart(itemToRemove));\r\n    }\r\n    closeModal();\r\n    dispatch(\r\n      showNotification({\r\n        message: \"Product has been successfully removed!\",\r\n        type: \"success\",\r\n      })\r\n    );\r\n  };\r\n  const increaseQuantity = async (id, size) => {\r\n    try {\r\n      const product = await getProduct(id);\r\n      const cartItem = cartItems.find(\r\n        (item) => item._id === id && item.size === size\r\n      );\r\n      if (cartItem && cartItem.quantity + 1 > product.quantity) {\r\n        dispatch(\r\n          showNotification({\r\n            message:\r\n              \"Cannot add more items to the cart than available in stock.\",\r\n            type: \"error\",\r\n          })\r\n        );\r\n        return;\r\n      }\r\n\r\n      dispatch(\r\n        adjustQuantity({\r\n          _id: id,\r\n          size: size,\r\n          quantity: cartItem.quantity + 1,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch product:\", error);\r\n    }\r\n  };\r\n  const decreaseQuantity = (id, size) => {\r\n    const newCartItems = cartItems.map((item) =>\r\n      item._id === id && item.size === size\r\n        ? { ...item, quantity: Math.max(1, item.quantity - 1) }\r\n        : item\r\n    );\r\n    const updatedItem = newCartItems.find(\r\n      (item) => item._id === id && item.size === size\r\n    );\r\n    if (updatedItem) {\r\n      dispatch(\r\n        adjustQuantity({\r\n          _id: updatedItem._id,\r\n          size: updatedItem.size,\r\n          quantity: updatedItem.quantity,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  if (!cartItems) {\r\n    return <div>Product not found in cart</div>;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"mx-auto max-w-screen-xl px-4 py-8 sm:px-6 sm:py-12 lg:px-8 mt-28\">\r\n        <div className=\"mx-auto max-w-3xl\">\r\n          <header className=\"text-center\">\r\n            <h1 className=\"text-xl font-bold text-gray-900 sm:text-3xl\">\r\n              Your Cart\r\n            </h1>\r\n          </header>\r\n          {cartItems.length === 0 ? (\r\n            <div className=\"text-center mt-40\">\r\n              <p className=\"text-lg text-gray-600\">No products in cart.</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"mt-8\">\r\n              <ul className=\"space-y-4\">\r\n                {cartItems.map((item) => (\r\n                  <li\r\n                    key={`${item._id}-${item.size}`}\r\n                    className=\"flex items-center gap-4\"\r\n                  >\r\n                    <img\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      className=\"size-40 rounded object-cover\"\r\n                    />\r\n\r\n                    <div className=\"flex-1\">\r\n                      <h3 className=\"text-lg text-gray-900\">{item.name}</h3>\r\n\r\n                      <dl className=\"mt-0.5 space-y-px text-[10px] text-gray-600\">\r\n                        <div>\r\n                          <dt className=\"inline  text-base \">Price: </dt>\r\n                          <dd className=\"inline  text-base\">\r\n                            {\" \"}\r\n                            {formatPrice(item.price)}\r\n                          </dd>\r\n                        </div>\r\n                      </dl>\r\n                      <dl className=\"mt-0.5 space-y-px text-[10px] text-gray-600\">\r\n                        <div>\r\n                          <dt className=\"inline  text-base \">Size: </dt>\r\n                          <dd className=\"inline  text-base\"> {item.size}</dd>\r\n                        </div>\r\n                      </dl>\r\n                    </div>\r\n                    <div className=\"flex flex-1 items-center justify-center \">\r\n                      <button\r\n                        className=\"group rounded-l-full px-4 py-2 border border-gray-200 flex items-center justify-center shadow-sm shadow-transparent transition-all duration-500 hover:shadow-gray-200 hover:border-gray-300 hover:bg-gray-50\"\r\n                        onClick={() => decreaseQuantity(item._id, item.size)}\r\n                      >\r\n                        <svg\r\n                          className=\"stroke-gray-900 transition-all duration-500 group-hover:stroke-black\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"22\"\r\n                          height=\"22\"\r\n                          viewBox=\"0 0 22 22\"\r\n                          fill=\"none\"\r\n                        >\r\n                          <path\r\n                            d=\"M16.5 11H5.5\"\r\n                            stroke=\"\"\r\n                            strokeWidth=\"1.6\"\r\n                            strokeLinecap=\"round\"\r\n                          />\r\n                          <path\r\n                            d=\"M16.5 11H5.5\"\r\n                            stroke=\"\"\r\n                            strokeOpacity=\"0.2\"\r\n                            strokeWidth=\"1.6\"\r\n                            strokeLinecap=\"round\"\r\n                          />\r\n                          <path\r\n                            d=\"M16.5 11H5.5\"\r\n                            stroke=\"\"\r\n                            strokeOpacity=\"0.2\"\r\n                            strokeWidth=\"1.6\"\r\n                            strokeLinecap=\"round\"\r\n                          />\r\n                        </svg>\r\n                      </button>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"border-y border-gray-200 outline-none text-gray-900 font-semibold text-lg w-full max-w-[118px] min-w-[80px] placeholder:text-gray-900 px-4 py-[5px] text-center bg-transparent\"\r\n                        placeholder=\"1\"\r\n                        value={item.quantity}\r\n                        onChange={() => {}}\r\n                        readOnly\r\n                      />\r\n                      <button\r\n                        className=\"group rounded-r-full px-4 py-2 border border-gray-200 flex items-center justify-center shadow-sm shadow-transparent transition-all duration-500 hover:shadow-gray-200 hover:border-gray-300 hover:bg-gray-50\"\r\n                        onClick={() => increaseQuantity(item._id, item.size)}\r\n                      >\r\n                        <svg\r\n                          className=\"stroke-gray-900 transition-all duration-500 group-hover:stroke-black\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"22\"\r\n                          height=\"22\"\r\n                          viewBox=\"0 0 22 22\"\r\n                          fill=\"none\"\r\n                        >\r\n                          <path\r\n                            d=\"M11 5.5V16.5M16.5 11H5.5\"\r\n                            stroke=\"\"\r\n                            strokeWidth=\"1.6\"\r\n                            strokeLinecap=\"round\"\r\n                          />\r\n                          <path\r\n                            d=\"M11 5.5V16.5M16.5 11H5.5\"\r\n                            stroke=\"\"\r\n                            strokeOpacity=\"0.2\"\r\n                            strokeWidth=\"1.6\"\r\n                            strokeLinecap=\"round\"\r\n                          />\r\n                          <path\r\n                            d=\"M11 5.5V16.5M16.5 11H5.5\"\r\n                            stroke=\"\"\r\n                            strokeOpacity=\"0.2\"\r\n                            strokeWidth=\"1.6\"\r\n                            strokeLinecap=\"round\"\r\n                          />\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"flex flex-1 items-center justify-center gap-2\">\r\n                      <button\r\n                        className=\"text-gray-600 transition hover:text-red-600\"\r\n                        onClick={() => handleRemove(item._id, item.size)}\r\n                      >\r\n                        <span className=\"sr-only\">Remove item</span>\r\n\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          strokeWidth=\"1.5\"\r\n                          stroke=\"currentColor\"\r\n                          className=\"h-5 w-5\"\r\n                        >\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\r\n                          />\r\n                        </svg>\r\n                      </button>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n\r\n              <div className=\"mt-8 flex justify-end border-t border-gray-100 pt-8\">\r\n                <div className=\"mx-auto w-auto\">\r\n                  <img\r\n                    src=\"/Assets/logo-no-background.png\"\r\n                    alt=\"\"\r\n                    className=\" w-32 h-auto object-cover\"\r\n                  />\r\n                </div>\r\n                <div className=\"w-screen max-w-lg space-y-4\">\r\n                  <dl className=\"space-y-0.5 text-sm text-gray-700\">\r\n                    <div className=\"flex justify-between\">\r\n                      <dt>Subtotal</dt>\r\n                      <dd>{formatPrice(subtotal)}</dd>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between !text-base font-medium\">\r\n                      <dt>Total</dt>\r\n                      <dd>{formatPrice(total)}</dd>\r\n                    </div>\r\n                  </dl>\r\n\r\n                  <div className=\"flex justify-end\">\r\n                    <Link to=\"/checkout\">\r\n                      <a\r\n                        href=\"/\"\r\n                        className=\"block rounded bg-gray-700 px-5 py-3 text-sm text-gray-100 transition hover:bg-gray-600\"\r\n                      >\r\n                        Checkout\r\n                      </a>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        {isOpen && (\r\n          <div\r\n            data-dialog-backdrop=\"dialog-xs\"\r\n            data-dialog-backdrop-close=\"true\"\r\n            className=\"pointer-events-auto fixed inset-0 z-[999] grid h-screen w-screen place-items-center bg-black bg-opacity-60 opacity-100 backdrop-blur-sm transition-opacity duration-300\"\r\n          >\r\n            <div\r\n              data-dialog=\"dialog-xs\"\r\n              className=\"relative m-4 w-1/4 min-w-[25%] max-w-[25%] rounded-lg bg-white font-sans text-base font-light leading-relaxed text-blue-gray-500 antialiased shadow-2xl\"\r\n            >\r\n              <div className=\"flex items-center p-4 font-sans text-2xl antialiased font-semibold leading-snug shrink-0 text-blue-gray-900\">\r\n                Confirm Deletion\r\n              </div>\r\n              <div className=\"relative p-4 font-sans text-base antialiased font-light leading-relaxed border-t border-b border-t-blue-gray-100 border-b-blue-gray-100 text-blue-gray-500\">\r\n                Are you sure you want to remove the product from the cart?\r\n              </div>\r\n              <div className=\"flex flex-wrap items-center justify-end p-4 shrink-0 text-blue-gray-500\">\r\n                <button\r\n                  onClick={closeModal}\r\n                  data-ripple-dark=\"true\"\r\n                  data-dialog-close=\"true\"\r\n                  className=\"px-6 py-3 mr-1 font-sans text-xs font-bold text-red-500 uppercase transition-all rounded-lg middle none center hover:bg-red-500/10 active:bg-red-500/30 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none\"\r\n                >\r\n                  No\r\n                </button>\r\n                <button\r\n                  onClick={confirmRemoval}\r\n                  data-ripple-light=\"true\"\r\n                  data-dialog-close=\"true\"\r\n                  className=\"middle none center rounded-lg bg-gradient-to-tr from-green-600 to-green-400 py-3 px-6 font-sans text-xs font-bold uppercase text-white shadow-md shadow-green-500/20 transition-all hover:shadow-lg hover:shadow-green-500/40 active:opacity-[0.85] disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none\"\r\n                >\r\n                  Yes\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"names":["Cart","dispatch","useDispatch","isOpen","setIsOpen","useState","itemToRemove","setItemToRemove","cartItems","useSelector","state","cart","items","useEffect","localStorage","setItem","JSON","stringify","subtotal","reduce","acc","item","price","quantity","total","closeModal","_jsxs","children","_jsx","className","length","map","src","image","alt","name","formatPrice","size","onClick","decreaseQuantity","id","updatedItem","_id","Math","max","find","adjustQuantity","xmlns","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeOpacity","type","placeholder","value","onChange","readOnly","async","product","getProduct","cartItem","showNotification","message","error","console","increaseQuantity","handleRemove","strokeLinejoin","concat","Link","to","href","confirmRemoval","removeFromCart"],"sourceRoot":""}